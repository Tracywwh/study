function类型

函数声明：
function sum(num1,num2){
  return num1 + num2
}

函数表达式：
var sum = function(num1, num2){
  return num1 + num2
};

函数声明和函数表达式几乎相差无几，但在解析加载时，并非相同。
解析起会率先读取函数声明，并使其在执行任何代码之前可用。
函数表达式，则必须等到解析器执行到它所在的代码行，才会真正被解释执行。

构造函数：
var sum1 = new sum();


函数和构造函数的区别：
function createPerson(name, age, job){
  var o = new object();
  o.name = name;
  o.age = age;
  o.job = job;
  o.sayName = function(){
    alert(this.name) 
  }
  return o;
}
调用： var person = createPerson('Tracy',18,'Engineer')

function Person(name, age, job){
  this.name = name;
  this.age = age;
  this.job = job;
  this.sayName = function(){
    alert(this.name)
  }
}
调用： var person = new Person('Tracy',18,'Engineer')

两者的区别在于：
1. 构造函数没有显示的创建对象
2. 直接将属性和方法赋予给了this对象
3. 没有return
4. 构造函数首字母大写
5. 创建实例必须要new操作符






