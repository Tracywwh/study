一组javascript构建工具通常由：
package管理器：yarn/npm； （npm下载的包会版本不一致，yarn不会）
打包器：webpacket/parcel；
编译器：babel


常用命令行：
sudo npm install yarn -g 
Sudo yarn global add @vue/cli
Sudo yarn global add @tarojs/cli

github ssh
gitlab http

npm run dev:weapp   运行小程序

提交命令行
git add .  
git commit -m ‘修改信息’
Git push origin 

git checkout ‘分支名’

git tag 查看所有tag q退出
git tag tagname 新建tag
git push origin tagname 把tag推送到远程

git tag -d tagname 删除本地tag
git push origin :tagname 将空tag推送到远程：删除远程tag

A合并到B
在B分支上，git merge A
git push origin 推送到远程

git clone 地址

ls -al 查看.git
rm -rf .git 删除.git文件：这是记录git操作和分支tag映射关系的，要删除后才能复制移动文件夹到其他目录下上传git上

git上创建私有库，clone git地址，git客户端clone，在对应目录下上传项目文件。




安装typescript
npm install -g typescript 安装ts
tsc xxx.ts   编译ts 或 在vscode中设置：1)命令行tsc --init生成tsconfig.json 改 “outDir":"./js"   2)任务-运行任务-监视tsconfig.json

typescript优势：
1. 支持es6规范
2. 强大的IDE支持（语法提示）
3. Angular2的开发语言


nvm： node版本管理
安装nvm步骤：
（https://github.com/nvm-sh/nvm#install--update-script）
1. cd ~/
2. git clone https://github.com/nvm-sh/nvm.git .nvm
3. cd ~/.nvm
4. git checkout v0.39.1
5. . ./nvm.sh
6. touch ~/.bashrc
7. vim ~/.bashrc
8. 如下3行内容拷进去
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
最后一步： esc，:wq

nvm命令行：

nvm list：查看当前本机使用 nvm 已安装的nodejs的版本列表

nvm arch：查看当前本机是 32 bit 还是 64 bit

nvm install node@版本号：安装指定版本的 nodejs

nvm install latest：安装最新版本的 nodejs

nvm install 14.15.1：安装 14.15.1 版本的 nodejs

nvm uninstall node@版本号：卸载指定版本的 nodejs

nvm uninstall 14.15.1：卸载 14.15.1 版本的 nodejs

nvm use node@版本号：使用指定版本的 nodejs(该版本是已经安装过后的)

nvm use 14.15.1：使用已安装的 14.15.1 版本的 nodejs

nvm root：查看本机安装的 nvm 的安装目录地址

使用管理员身份打开cmd，然后使用 nvm use 14.15.1使用指定版本的node

