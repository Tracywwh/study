https://juejin.cn/post/6844903811622912014


es6(2015)

1. 类
class xxx { }


2. module模块化
导出：export const name = 'Tracy'
导入： import name from './name'


3. 箭头函数 
() => {}


4. 函数参数默认值
function foo(height=50, color='red'){ }


5. 模版字符串
const name = `My name is ${firstName} ${lastName}`


6. 解构赋值
const foo = ['one','two','three']
const [first,second,third] = foo
first  => 'one'
second => 'two'
third  => 'three'



7. 延展操作符
const objClone = { ...obj }


8. 对象属性简写
const name = 'Tracy', age='18'
const student = {
  name,
  age
}


9. Promise异步编程


10. let与const
const定义常量； let定义变量




es7(2016)
1. Array.prototype.includes() 返回 true/false


2. 指数操作符
2**10  =》 1024 





es8(2017)
1. async/await 可以与for...of循环一起使用
async function process(array){
  for await( let i of array ){
      doSomething(i)
  }
}


2. Object.values()


3. Object.entries()

4. String padding 
String.prototype.padStart和String.prototype.padEnd ，允许将空字符串或其他字符串添加到原始字符串的开头或结尾


5. 函数参数列表结尾允许逗号

6. Object.getOwnPropertyDescriptors()
用来获取一个对戏那个的所有自身属性的描述符，如果没有任何自身属性，则返回空对象

7. SharedArrayBuffer对象


8. Atomics对象





es9（2018）

1. async/await

2. Promise.finally()

3. Rest/Spread属性

4. 正则表达式命名捕获组

5. 正则表达式反向断言

6. 正则表达式dotAll模式

7. 正则表达式Unicode转译

8. 非转义序列的模版字符串


es10（2019）
1. 行分隔符

2. 更加友好的JSON.stringify

3. Array的flat()和flatMap()

4. String的trimStart()和trimEnd()

5. Object.fromEntries()

6. Symbol.prototype.description

7. String.protype.matchAll

8. Function.prototype.toString

9. 修改match绑定
try{
}catch{
}

10. 新的基本数据类型BigInt
现在共有七种基本数据类型：string，number，boolean，null，undefined，symbol，bigInt









