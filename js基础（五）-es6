ES6的常用特性：

默认参数： function hello(txt='hello world'){  }

字符串模版： console.log(`hello ${name}`)

解构赋值；数组解构赋值，对象解构赋值，字符串解构赋值，布尔值解构赋值，函数参数解构赋值，数值解构赋值
eg： [a.b,...rest] = [1,2,3,4,5].  => a=1,b=2,c=3,4,5
     {foo,bar} = {foo:'a', bar: 'b'}    => foo:a, bar:b
     [a,b,c,d,e] = 'hello'   => a:'h',b:'e',c:'l',d:'l',e:'o'
     function add([a,b]){ return a+b }  add([1,3])

箭头函数；

Set去重和Map；
Set，WeakSet弱引用，必须是对象，不能遍历
eg: let arr = new Set()
arr.add(5);
arr.add(7)
console.log(arr.size) => 2     // new Set()的数组要获取个数，用size，相当于length
arr.delete()
arr.clear()
arr.has()

Map,WeakMap弱引用，必须是对象
let map1 = new Map()
map1.set()
map1.find()
map1.delete()

异步操作： Promise
Promise.all([]).then();  数组中全部加载完了再执行
promise.race([]).then(); 数组中某个快就先执行


类与对象；

模块化：
利用module进行多模块进行程序设计
export&import


******基本技能*******
源码： vue。element
业务： vue。react，angular

构建ES6的环境，构建工具：任务自动化（gulp），编译工具（babel，webpack），npm；
基础语法；
实战演练；








set() 类似于数组，但他的值都是唯一的。

const s = new Set();
[2, 3, 5, 4, 5, 2, 2].forEach(x => s.add(x));
=> s:[2,3,5,4]

const arr = [2,1,3,23,3,2,1,4]
[...new Set(arr)] => [2,1,3,23,4]

也可以去除字符串中的重复字符
new Set('abcbbcd') => {'a','b','c','d'}
[...new Set('abcbbcd')].join('') => 'abcd'


set()实例的方法：
add(); delete() 不添加重复的值,仅限于new Set()方可使用

let num = new Set();
num.add(3).add(1).add(3) => num: {3,1}   

num.delete(3) => num: {1}
num.has(1) => true
num.has(3) => false

let set = ['red','blue']







